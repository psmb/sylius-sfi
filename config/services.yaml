# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: ru_RU
    sylius.form.type.product_translation.validation_groups: [app_product]
    sylius.form.type.product.validation_groups: [app_product]
    router.request_context.scheme: "https"
    asset.request_context.secure: true

services:
    # Default configuration for services in *this* file
    _defaults:
        # Automatically injects dependencies in your services
        autowire: true

        # Automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true

        # Allows optimizing the container by removing unused services; this also means
        # fetching services directly from the container via $container->get() won't work
        public: false

    # Makes classes in src/ available to be used as services;
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: "../src/*"
        exclude: "../src/{Entity,Migrations,Tests,Kernel.php}"

    # Controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: "../src/Controller"
        tags: ["controller.service_arguments"]

    psmb.cloudpayments.form.type.gateway_configuration:
        class: Psmb\Cloudpayments\Form\Type\CloudpaymentsGatewayConfigurationType
        tags:
            - {
                  name: sylius.gateway_configuration_type,
                  type: cloudpayments,
                  label: cloudpayments,
              }
            - { name: form.type }
    psmb.cloudpayments.gateway_factory:
        class: Payum\Core\Bridge\Symfony\Builder\GatewayFactoryBuilder
        arguments: [Psmb\Cloudpayments\CloudpaymentsGatewayFactory]
        tags:
            - { name: payum.gateway_factory_builder, factory: cloudpayments }
    app.controller.shop.aboutus:
        class: App\Controller\Shop\AboutUsController
        arguments: ["@templating"]
        tags: ["controller.service_arguments"]
    app.controller.shop.policy:
        class: App\Controller\Shop\PolicyController
        arguments: ["@templating"]
        tags: ["controller.service_arguments"]
    app.controller.shop.download:
        class: App\Controller\Shop\DownloadController
        arguments: ["@service_container"]
        tags: ["controller.service_arguments"]
    app.listener.admin.menu_builder:
        class: App\MenuListener
        tags:
            - {
                  name: kernel.event_listener,
                  event: sylius.menu.shop.account,
                  method: addMenuItems,
              }
    app.payment_methods_resolver:
        class: App\PaymentMethodsResolver
        tags:
            - {
                  name: "sylius.payment_method_resolver",
                  type: "default",
                  label: "Based on Shipment",
                  priority: 10,
              }
        arguments: ["@sylius.repository.payment_method"]

    app.form.type.customer_guest:
        class: App\Form\Type\CustomerGuestTypeExtension
        tags:
            - {
                  name: form.type_extension,
                  extended_type: Sylius\Bundle\CoreBundle\Form\Type\Customer\CustomerGuestType,
              }

    app.form.type.product_image:
        class: App\Form\Type\ProductImageTypeExtension
        tags:
            - {
                  name: form.type_extension,
                  extended_type: Sylius\Bundle\CoreBundle\Form\Type\Product\ProductImageType,
              }

    app.form.type.login:
        class: App\Form\Type\LoginType
        arguments: [App\Entity\Order\Order, []]
        tags:
            - { name: "form.type" }

    app.form.type.checkout_address:
        class: App\Form\Type\CheckoutAddressType
        arguments: [App\Entity\Order\Order, [], "@sylius.context.cart"]
        tags:
            - { name: "form.type" }

    app.form.type.customer_registration:
        class: App\Form\Type\CustomerRegistrationTypeExtension
        tags:
            - {
                  name: form.type_extension,
                  extended_type: Sylius\Bundle\CoreBundle\Form\Type\Customer\CustomerRegistrationType,
              }
    sylius.money_formatter:
        class: App\Formatter\MoneyFormatter
    app.shipping_calculator.pickpoint:
        class: App\Shipping\PickpointShippingCalculator
        tags:
            - {
                  name: sylius.shipping_calculator,
                  calculator: pickpoint,
                  label: "PICKPOINT",
              }
    sylius.factory.customer_after_checkout:
        class: App\CustomerAfterCheckoutFactory
        arguments: ["@sylius.factory.customer"]
        public: true

    sylius.state_resolver.order_checkout:
        class: App\CheckoutStateResolver
        arguments:
            [
                "@sm.factory",
                "@sylius.checker.order_payment_method_selection_requirement",
                "@sylius.checker.order_shipping_method_selection_requirement",
            ]
        public: true

google_tag_manager:
    enabled: true
    id: "GTM-KH44GQS"
    autoAppend: false
gtm:
    inject: true
    features:
        environment: true
        route: true
        context: true
        events: true

sylius_product:
    resources:
        product:
            classes:
                repository: App\Repository\ProductRepository
